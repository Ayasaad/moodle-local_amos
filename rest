<?php

// This file is part of Moodle - http://moodle.org/
//
// Moodle is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Moodle is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.

/**
 * Simple REST services provider
 *
 * At the moment, the only supported REST method is /greylist returning
 * the list of greylisted strings.
 *
 * @package    local_amos
 * @copyright  2012 David Mudrak <david@moodle.com>
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */

define('NO_DEBUG_DISPLAY', true);
define('NO_MOODLE_COOKIES', true);

require_once(dirname(dirname(dirname(__FILE__))).'/config.php');

$request = false;
if (isset($_SERVER['PATH_INFO'])) {
    if (isset($_SERVER['SCRIPT_NAME']) and strpos($_SERVER['PATH_INFO'], $_SERVER['SCRIPT_NAME']) === 0) {
        $request = substr($_SERVER['PATH_INFO'], strlen($_SERVER['SCRIPT_NAME']));
    } else {
        $request = $_SERVER['PATH_INFO'];
    }
    $request = clean_param($request, PARAM_PATH);
}

if ($request === '/greylist') {
    $format = optional_param('format', 'csv', PARAM_ALPHA);
    if ($format !== 'csv') {
        header($_SERVER["SERVER_PROTOCOL"]." 400 Bad Request (unsupported format)");
        die();
    }

    $rs = $DB->get_recordset('amos_greylist', null, 'branch,component,stringid', 'branch,component,stringid');

    if ($format === 'csv') {
        header('Content-type: text/csv');
        header('Content-disposition: attachment;filename=amos-greylist-'.time().'.csv');
    }

    foreach ($rs as $string) {
        printf("%s,%s,%s\n", $string->branch, $string->component, $string->stringid);
    }
    $rs->close();

} else {
    header($_SERVER["SERVER_PROTOCOL"]." 404 Not Found");
}
