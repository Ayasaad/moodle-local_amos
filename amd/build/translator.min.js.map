{"version":3,"sources":["../src/translator.js"],"names":["init","registerEventListeners","root","document","getElementById","addEventListener","e","target","classList","contains","item","closest","getAttribute","translatorItemEditingOn","ctrlKey","hasAttribute","translatorItemEditingOff","nocleaning","textarea","querySelector","refHeight","clientHeight","setAttribute","value","style","height","focus","previoustext","newtext","trim","disabled"],"mappings":"2IA2BoB,QAAPA,CAAAA,IAAO,EAAM,CACtBC,CAAsB,EACzB,C,IAKKA,CAAAA,CAAsB,CAAG,UAAM,CACjC,GAAIC,CAAAA,CAAI,CAAGC,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,CAAX,CAEAF,CAAI,CAACG,gBAAL,CAAsB,OAAtB,CAA+B,SAAAC,CAAC,CAAI,CAChC,GAAIA,CAAC,CAACC,MAAF,CAASC,SAAT,CAAmBC,QAAnB,CAA4B,iBAA5B,GAAkDH,CAAC,CAACC,MAAF,CAASC,SAAT,CAAmBC,QAAnB,CAA4B,qBAA5B,CAAtD,CAA0G,CACtG,GAAIC,CAAAA,CAAI,CAAGJ,CAAC,CAACC,MAAF,CAASI,OAAT,CAAiB,sCAAjB,CAAX,CAEA,GAAsC,MAAlC,EAAAD,CAAI,CAACE,YAAL,CAAkB,WAAlB,CAAJ,CAA8C,CAC1CC,CAAuB,CAACH,CAAD,CAAOJ,CAAC,CAACQ,OAAT,CAC1B,CACJ,CACJ,CARD,EAUAZ,CAAI,CAACG,gBAAL,CAAsB,MAAtB,CAA8B,SAAAC,CAAC,CAAI,CAC/B,GAAIA,CAAC,CAACC,MAAF,CAASQ,YAAT,CAAsB,aAAtB,GAAgF,YAAxC,EAAAT,CAAC,CAACC,MAAF,CAASK,YAAT,CAAsB,aAAtB,CAA5C,CAAkG,CAC9F,GAAIF,CAAAA,CAAI,CAAGJ,CAAC,CAACC,MAAF,CAASI,OAAT,CAAiB,sCAAjB,CAAX,CACAK,CAAwB,CAACN,CAAD,CAC3B,CACJ,CALD,IAMH,C,CAOKG,CAAuB,CAAG,SAACH,CAAD,CAA8B,IAAvBO,CAAAA,CAAuB,2DACtDC,CAAQ,CAAGR,CAAI,CAACS,aAAL,CAAmB,8BAAnB,CAD2C,CAEtDC,CAAS,CAAGV,CAAI,CAACS,aAAL,CAAmB,kBAAnB,EAAuCE,YAFG,CAI1DH,CAAQ,CAACI,YAAT,CAAsB,eAAtB,CAAuCJ,CAAQ,CAACK,KAAhD,EACAL,CAAQ,CAACI,YAAT,CAAsB,iBAAtB,CAAyCL,CAAU,CAAG,YAAH,CAAkB,EAArE,EAEA,GAAgB,EAAZ,CAAAG,CAAJ,CAAoB,CAChBF,CAAQ,CAACM,KAAT,CAAeC,MAAf,CAAyBL,CAAS,CAAG,CAAb,CAAkB,IAC7C,CAEDV,CAAI,CAACY,YAAL,CAAkB,WAAlB,CAA+B,MAA/B,EACAJ,CAAQ,CAACQ,KAAT,EACH,C,CAMKV,CAAwB,CAAG,SAACN,CAAD,CAAU,IACnCQ,CAAAA,CAAQ,CAAGR,CAAI,CAACS,aAAL,CAAmB,8BAAnB,CADwB,CAEnCQ,CAAY,CAAGT,CAAQ,CAACN,YAAT,CAAsB,eAAtB,CAFoB,CAGnCK,CAAU,CAAGC,CAAQ,CAACN,YAAT,CAAsB,iBAAtB,CAHsB,CAInCgB,CAAO,CAAGV,CAAQ,CAACK,KAJgB,CAMvC,GAAmB,YAAf,GAAAN,CAAJ,CAAiC,CAC7BW,CAAO,CAAGA,CAAO,CAACC,IAAR,EACb,CAED,GAAIF,CAAY,GAAKC,CAArB,CAA8B,CAE1BV,CAAQ,CAACK,KAAT,CAAiBI,CAAjB,CACAjB,CAAI,CAACY,YAAL,CAAkB,WAAlB,CAA+B,MAA/B,CAEH,CALD,IAKO,CACHJ,CAAQ,CAACY,QAAT,GACH,CACJ,C","sourcesContent":["// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * JS module for the AMOS translator.\n *\n * @module      local_amos/translator\n * @package     local_amos\n * @copyright   2020 David Mudr√°k <david@moodle.com>\n * @license     https://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * @function init\n */\nexport const init = () => {\n    registerEventListeners();\n};\n\n/**\n * @function registerEventListeners\n */\nconst registerEventListeners = () => {\n    let root = document.getElementById('amostranslator');\n\n    root.addEventListener('click', e => {\n        if (e.target.classList.contains('amostranslation') || e.target.classList.contains('amostranslationview')) {\n            let item = e.target.closest('[data-region=\"amostranslatoritem\"]');\n\n            if (item.getAttribute('data-mode') == 'view') {\n                translatorItemEditingOn(item, e.ctrlKey);\n            }\n        }\n    });\n\n    root.addEventListener('blur', e => {\n        if (e.target.hasAttribute('data-region') && e.target.getAttribute('data-region') == 'amoseditor') {\n            let item = e.target.closest('[data-region=\"amostranslatoritem\"]');\n            translatorItemEditingOff(item);\n        }\n    }, true);\n};\n\n/**\n * @function translatorItemEditingOn\n * @param {Element} item\n * @param {bool} [nocleaning=false] - turn editing on with nocleaning enabled\n */\nconst translatorItemEditingOn = (item, nocleaning = false) => {\n    let textarea = item.querySelector('[data-region=\"amoseditor\"]');\n    let refHeight = item.querySelector('.amostranslation').clientHeight;\n\n    textarea.setAttribute('data-previous', textarea.value);\n    textarea.setAttribute('data-nocleaning', nocleaning ? 'nocleaning' : '');\n\n    if (refHeight > 40) {\n        textarea.style.height = (refHeight - 9) + 'px';\n    }\n\n    item.setAttribute('data-mode', 'edit');\n    textarea.focus();\n};\n\n/**\n * @function translatorItemEditingOff\n * @param {Element} item\n */\nconst translatorItemEditingOff = (item) => {\n    let textarea = item.querySelector('[data-region=\"amoseditor\"]');\n    let previoustext = textarea.getAttribute('data-previous');\n    let nocleaning = textarea.getAttribute('data-nocleaning');\n    let newtext = textarea.value;\n\n    if (nocleaning !== 'nocleaning') {\n        newtext = newtext.trim();\n    }\n\n    if (previoustext === newtext) {\n        // The following line is intentionally here to remove added trailing/heading whitespace.\n        textarea.value = previoustext;\n        item.setAttribute('data-mode', 'view');\n\n    } else {\n        textarea.disabled = true;\n    }\n};\n\n"],"file":"translator.min.js"}