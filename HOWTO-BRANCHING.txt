Registering a new Moodle branch in AMOS
=======================================

Whenever the new major Moodle version is released, several steps must be done
in AMOS. For the purpose of this document, let us expect that Moodle X.X was
just released and the new branch MOODLE_XX_STABLE was created in moodle.git.
So now we must tell AMOS that the master branch is Y.Y.

Note that in AMOS, the mlang_version already calls the new git branch as
MOODLE_YY_STABLE even if it is actually master at the moment.

* Disable new logins at the portal and announce the maintenance via
  @moodlesites twitter.
* Make sure that origin/MOODLE_XX_STABLE is fetched into the moodle.git clone
  that AMOS tracks.
* Turn Jenkins off.
* Switch the portal to the climaintenance mode.
* Backup AMOS database.
* Define new mlang_version for MOODLE_YY_STABLE in mlanglib.php.
* Grep for the current usage of MOODLE_XX and update it with MOODLE_YY where
  needed. The affected files should probably be:

        admin/newlanguage.php
        cli/export-installer.php
        cli/fix-drift.php
        cli/parse-core.php
        cli/utilslib.php
        jobs/install-packs-publish

* Update jobs/zip-packs-snapshot and make it ready for the to-be-created branch.
* Make sure that plugins.xml contains declaration for Y.Y.
* Deploy the code at the production site.
* Make sure to perform the following tasks in tmux or similar to avoid
  accidental cancellation.
* Fork the new branch in the repository (took cca 60 minutes last time)

        php cli/make-branch.php --from=MOODLE_XX_STABLE --to=MOODLE_YY_STABLE

  and do not forget to reinitilize the snapshot table (took cca 2 hours)

        php cli/init-snapshot.php --branch=YY00

* Copy moodledata/amos/var/MOODLE_XX_STABLE.startat to
  MOODLE_YY_STABLE.startat. Fix the content of MOODLE_XX_STABLE.startat so
  that it points to the HEAD of the real MOODLE_XX_STABLE (and not the master).
* Make moodledata/amos/var/export-zip/Y.Y/
* Force AMOS to regenerate all ZIPs including those for Y.Y:

        # sudo -u www-data php admin/cli/cfg.php --component=local_amos --name=lastexportzip --set=1

* Create new MOODLE_XX_STABLE and install_XX_STABLE branches in moodle-install

        # cd /opt/data/amos/repos/moodle-install
        # sudo -u www-data git checkout -b MOODLE_XX_STABLE upstream/MOODLE_XX_STABLE
        # sudo -u www-data git checkout -b install_XX_STABLE upstream/MOODLE_XX_STABLE

* Create MOODLE_YY_STABLE branch in moodle-langpacks

        # cd /opt/data/amos/repos/moodle-langpacks
        # sudo -u www-data git checkout master
        # sudo -u www-data git branch MOODLE_YY_STABLE

  and make a clone for it at moodle-langpacks-clones

        # /opt/data/amos/repos/moodle-langpacks-clones
        # sudo -u www-data git clone ../moodle-langpacks Y.Y
        # cd Y.Y
        # sudo -u www-data git checkout -b MOODLE_YY_STABLE origin/MOODLE_YY_STABLE
        # sudo -u www-data git branch -d master

  Check that jobs/zip-packs-snapshot will process the new version.

* Turn Jenkins on and let it re-generate all the ZIP packages (took cca 80 minutes)
* Check http://download.moodle.org/langpack/
* Clone greylisted strings

        INSERT INTO mdl_amos_greylist (branch, component, stringid)
        SELECT YY00 AS branch, component, stringid FROM mdl_amos_greylist WHERE branch = XX00;

* Disable the site maintenance mode.
* Have a beer!
